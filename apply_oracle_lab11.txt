SQL> 
SQL> -- step 1 --
SQL> 
SQL> MERGE INTO rental target
  2  USING (
  3  SELECT DISTINCT
  4  	 r.rental_id
  5  ,	 c.contact_id
  6  ,	 tu.check_out_date AS check_out_date
  7  ,	 tu.return_date AS return_date
  8  ,	 1001 AS created_by
  9  ,	 TRUNC(SYSDATE) AS creation_date
 10  ,	 1001 AS last_updated_by
 11  ,	 TRUNC(SYSDATE) AS last_update_date
 12  FROM member m INNER JOIN contact c
 13  ON m.member_id = c.member_id
 14  INNER JOIN transaction_upload tu
 15  ON c.first_name = tu.first_name
 16  AND NVL(c.middle_name, 'x') = NVL(tu.middle_name, 'x')
 17  AND c.last_name = tu.last_name
 18  AND m.account_number = tu.account_number
 19  LEFT JOIN rental r
 20  ON c.contact_id = r.customer_id
 21  AND TRUNC(tu.check_out_date) = TRUNC(r.check_out_date)
 22  AND TRUNC(tu.return_date) = TRUNC(r.check_out_date)
 23  ) source
 24  ON (target.rental_id = source.rental_id)
 25  WHEN MATCHED THEN
 26  UPDATE SET last_updated_by = source.last_updated_by
 27  ,		last_update_date = source.last_update_date
 28  WHEN NOT MATCHED THEN
 29  INSERT VALUES
 30  ( rental_s1.NEXTVAL
 31  , source.contact_id
 32  , source.check_out_date
 33  , source.return_date
 34  , source.created_by
 35  , source.creation_date
 36  , source.last_updated_by
 37  , source.last_update_date);

4681 rows merged.

SQL> 
SQL> SELECT   TO_CHAR(COUNT(*),'99,999') AS "Rental after merge"
  2  FROM     rental;

Rental                                                                          
-------                                                                         
  4,689                                                                         

1 row selected.

SQL> 
SQL> -- step 2 --
SQL> 
SQL> MERGE INTO rental_item target
  2  USING (
  3  SELECT
  4  	 ri.rental_item_id
  5  ,	 r.rental_id
  6  ,	 tu.item_id
  7  ,	 1001 AS created_by
  8  ,	 TRUNC(SYSDATE) AS creation_date
  9  ,	 1001 AS last_updated_by
 10  ,	 TRUNC(SYSDATE) AS last_update_date
 11  ,	 r.return_date - r.check_out_date AS rental_item_price
 12  ,	 cl.common_lookup_id AS rental_item_type
 13  FROM member m INNER JOIN contact c
 14  ON m.member_id = c.member_id
 15  INNER JOIN transaction_upload tu
 16  ON c.first_name = tu.first_name
 17  AND NVL(c.middle_name, 'x') = NVL(tu.middle_name, 'x')
 18  AND c.last_name = tu.last_name
 19  AND m.account_number = tu.account_number
 20  LEFT JOIN rental r
 21  ON c.contact_id = r.customer_id
 22  AND TRUNC(tu.check_out_date) = TRUNC(r.check_out_date)
 23  AND TRUNC(tu.return_date) = TRUNC(r.return_date)
 24  INNER JOIN common_lookup cl
 25  ON cl.common_lookup_table = 'RENTAL_ITEM'
 26  AND cl.common_lookup_column = 'RENTAL_ITEM_TYPE'
 27  AND cl.common_lookup_type = tu.rental_item_type
 28  LEFT JOIN rental_item ri
 29  ON r.rental_id = ri.rental_id
 30  ) source
 31  ON (target.rental_item_id = source.rental_item_id)
 32  WHEN MATCHED THEN
 33  UPDATE SET last_updated_by = source.last_updated_by
 34  ,		last_update_date = source.last_update_date
 35  WHEN NOT MATCHED THEN
 36  INSERT VALUES
 37  ( rental_item_s1.nextval
 38  , source.rental_id
 39  , source.item_id
 40  , source.created_by
 41  , source.creation_date
 42  , source.last_updated_by
 43  , source.last_update_date
 44  , source.rental_item_price
 45  , source.rental_item_type);

11520 rows merged.

SQL> 
SQL> SELECT   TO_CHAR(COUNT(*),'99,999') AS "Rental Item after merge"
  2  FROM     rental_item;

Rental                                                                          
-------                                                                         
 11,533                                                                         

1 row selected.

SQL> 
SQL> -- step 3 --
SQL> 
SQL> MERGE INTO transaction target
  2  USING (
  3  SELECT
  4  	 t.transaction_id
  5  ,	 tu.payment_account_number AS transaction_account
  6  ,	 cl1.common_lookup_id AS transaction_type
  7  ,	 tu.transaction_date
  8  ,	 (SUM(tu.transaction_amount) / 1.06) AS transaction_amount
  9  ,	 r.rental_id
 10  ,	 cl2.common_lookup_id AS payment_method_type
 11  ,	 m.credit_card_number AS payment_account_number
 12  ,	 1001 AS created_by
 13  ,	 SYSDATE AS creation_date
 14  ,	 1001 AS last_updated_by
 15  ,	 SYSDATE AS last_update_date
 16   FROM     member m INNER JOIN contact c
 17   ON       m.member_id = c.member_id
 18   INNER JOIN transaction_upload tu
 19   ON       c.first_name = tu.first_name
 20   AND      NVL(c.middle_name,'x') = NVL(tu.middle_name,'x')
 21   AND      c.last_name = tu.last_name
 22   AND      tu.account_number = m.account_number
 23   LEFT JOIN rental r
 24   ON c.contact_id = r.customer_id
 25   AND TRUNC(tu.check_out_date) = TRUNC(r.check_out_date)
 26   AND TRUNC(tu.return_date) = TRUNC(r.return_date)
 27   INNER JOIN common_lookup cl1
 28   ON cl1.common_lookup_table = 'TRANSACTION'
 29   AND cl1.common_lookup_column = 'TRANSACTION_TYPE'
 30   AND cl1.common_lookup_type = tu.transaction_type
 31   INNER JOIN common_lookup cl2
 32   ON cl2.common_lookup_table = 'TRANSACTION'
 33   AND cl2.common_lookup_column = 'PAYMENT_METHOD_TYPE'
 34   AND cl2.common_lookup_type = tu.payment_method_type
 35   LEFT JOIN transaction t
 36   ON t.transaction_account = tu.payment_account_number
 37   AND t.rental_id = r.rental_id
 38   AND t.transaction_type = cl1.common_lookup_id
 39   AND t.transaction_date = tu.transaction_date
 40   AND t.payment_method_type = cl2.common_lookup_id
 41   AND t.payment_account_number = m.credit_card_number
 42   GROUP BY t.transaction_id
 43  ,	 tu.payment_account_number
 44  ,	 cl1.common_lookup_id
 45  ,	 tu.transaction_date
 46  ,	 r.rental_id
 47  ,	 cl2.common_lookup_id
 48  ,	 m.credit_card_number
 49  ,	 1001
 50  ,	 TRUNC(SYSDATE)
 51  ,	 1001
 52  ,	 TRUNC(SYSDATE)
 53  ) source
 54  ON (target.transaction_id = source.transaction_id)
 55  WHEN MATCHED THEN
 56  UPDATE SET last_updated_by = source.last_updated_by
 57  ,		last_update_date = source.last_update_date
 58  WHEN NOT MATCHED THEN
 59  INSERT VALUES
 60  ( transaction_s1.nextval
 61  , source.transaction_account
 62  , source.transaction_type
 63  , source.transaction_date
 64  , source.transaction_amount
 65  , source.rental_id
 66  , source.payment_method_type
 67  , source.payment_account_number
 68  , source.created_by
 69  , source.creation_date
 70  , source.last_updated_by
 71  , source.last_update_date);

4681 rows merged.

SQL> 
SQL> SELECT   TO_CHAR(COUNT(*),'99,999') AS "Transaction after merge"
  2  FROM     transaction;

Transac                                                                         
-------                                                                         
  4,681                                                                         

1 row selected.

SQL> 
SQL> -- step 4 --
SQL> 
SQL> -- Create a procedure to wrap the transaction.
SQL> CREATE OR REPLACE PROCEDURE upload_transaction IS
  2  BEGIN
  3    -- Set save point for an all or nothing transaction.
  4    SAVEPOINT starting_point;
  5  
  6    -- Merge into RENTAL table.
  7  MERGE INTO rental target
  8  USING (
  9  SELECT DISTINCT
 10  	 r.rental_id
 11  ,	 c.contact_id
 12  ,	 tu.check_out_date AS check_out_date
 13  ,	 tu.return_date AS return_date
 14  ,	 1001 AS created_by
 15  ,	 TRUNC(SYSDATE) AS creation_date
 16  ,	 1001 AS last_updated_by
 17  ,	 TRUNC(SYSDATE) AS last_update_date
 18  FROM member m INNER JOIN contact c
 19  ON m.member_id = c.member_id
 20  INNER JOIN transaction_upload tu
 21  ON c.first_name = tu.first_name
 22  AND NVL(c.middle_name, 'x') = NVL(tu.middle_name, 'x')
 23  AND c.last_name = tu.last_name
 24  AND m.account_number = tu.account_number
 25  LEFT JOIN rental r
 26  ON c.contact_id = r.customer_id
 27  AND TRUNC(tu.check_out_date) = TRUNC(r.check_out_date)
 28  AND TRUNC(tu.return_date) = TRUNC(r.check_out_date)
 29  ) source
 30  ON (target.rental_id = source.rental_id)
 31  WHEN MATCHED THEN
 32  UPDATE SET last_updated_by = source.last_updated_by
 33  ,		last_update_date = source.last_update_date
 34  WHEN NOT MATCHED THEN
 35  INSERT VALUES
 36  ( rental_s1.NEXTVAL
 37  , source.contact_id
 38  , source.check_out_date
 39  , source.return_date
 40  , source.created_by
 41  , source.creation_date
 42  , source.last_updated_by
 43  , source.last_update_date);
 44  
 45    -- Merge into RENTAL_ITEM table.
 46  MERGE INTO rental_item target
 47  USING (
 48  SELECT
 49  	 ri.rental_item_id
 50  ,	 r.rental_id
 51  ,	 tu.item_id
 52  ,	 1001 AS created_by
 53  ,	 TRUNC(SYSDATE) AS creation_date
 54  ,	 1001 AS last_updated_by
 55  ,	 TRUNC(SYSDATE) AS last_update_date
 56  ,	 r.return_date - r.check_out_date AS rental_item_price
 57  ,	 cl.common_lookup_id AS rental_item_type
 58  FROM member m INNER JOIN contact c
 59  ON m.member_id = c.member_id
 60  INNER JOIN transaction_upload tu
 61  ON c.first_name = tu.first_name
 62  AND NVL(c.middle_name, 'x') = NVL(tu.middle_name, 'x')
 63  AND c.last_name = tu.last_name
 64  AND m.account_number = tu.account_number
 65  LEFT JOIN rental r
 66  ON c.contact_id = r.customer_id
 67  AND TRUNC(tu.check_out_date) = TRUNC(r.check_out_date)
 68  AND TRUNC(tu.return_date) = TRUNC(r.return_date)
 69  INNER JOIN common_lookup cl
 70  ON cl.common_lookup_table = 'RENTAL_ITEM'
 71  AND cl.common_lookup_column = 'RENTAL_ITEM_TYPE'
 72  AND cl.common_lookup_type = tu.rental_item_type
 73  LEFT JOIN rental_item ri
 74  ON r.rental_id = ri.rental_id
 75  ) source
 76  ON (target.rental_item_id = source.rental_item_id)
 77  WHEN MATCHED THEN
 78  UPDATE SET last_updated_by = source.last_updated_by
 79  ,		last_update_date = source.last_update_date
 80  WHEN NOT MATCHED THEN
 81  INSERT VALUES
 82  ( rental_item_s1.nextval
 83  , source.rental_id
 84  , source.item_id
 85  , source.created_by
 86  , source.creation_date
 87  , source.last_updated_by
 88  , source.last_update_date
 89  , source.rental_item_price
 90  , source.rental_item_type);
 91  
 92    -- Merge into TRANSACTION table.
 93  MERGE INTO transaction target
 94  USING (
 95  SELECT
 96  	 t.transaction_id
 97  ,	 tu.payment_account_number AS transaction_account
 98  ,	 cl1.common_lookup_id AS transaction_type
 99  ,	 tu.transaction_date
100  ,	 (SUM(tu.transaction_amount) / 1.06) AS transaction_amount
101  ,	 r.rental_id
102  ,	 cl2.common_lookup_id AS payment_method_type
103  ,	 m.credit_card_number AS payment_account_number
104  ,	 1001 AS created_by
105  ,	 SYSDATE AS creation_date
106  ,	 1001 AS last_updated_by
107  ,	 SYSDATE AS last_update_date
108   FROM     member m INNER JOIN contact c
109   ON       m.member_id = c.member_id
110   INNER JOIN transaction_upload tu
111   ON       c.first_name = tu.first_name
112   AND      NVL(c.middle_name,'x') = NVL(tu.middle_name,'x')
113   AND      c.last_name = tu.last_name
114   AND      tu.account_number = m.account_number
115   LEFT JOIN rental r
116   ON c.contact_id = r.customer_id
117   AND TRUNC(tu.check_out_date) = TRUNC(r.check_out_date)
118   AND TRUNC(tu.return_date) = TRUNC(r.return_date)
119   INNER JOIN common_lookup cl1
120   ON cl1.common_lookup_table = 'TRANSACTION'
121   AND cl1.common_lookup_column = 'TRANSACTION_TYPE'
122   AND cl1.common_lookup_type = tu.transaction_type
123   INNER JOIN common_lookup cl2
124   ON cl2.common_lookup_table = 'TRANSACTION'
125   AND cl2.common_lookup_column = 'PAYMENT_METHOD_TYPE'
126   AND cl2.common_lookup_type = tu.payment_method_type
127   LEFT JOIN transaction t
128   ON t.transaction_account = tu.payment_account_number
129   AND t.rental_id = r.rental_id
130   AND t.transaction_type = cl1.common_lookup_id
131   AND t.transaction_date = tu.transaction_date
132   AND t.payment_method_type = cl2.common_lookup_id
133   AND t.payment_account_number = m.credit_card_number
134   GROUP BY t.transaction_id
135  ,	 tu.payment_account_number
136  ,	 cl1.common_lookup_id
137  ,	 tu.transaction_date
138  ,	 r.rental_id
139  ,	 cl2.common_lookup_id
140  ,	 m.credit_card_number
141  ,	 1001
142  ,	 TRUNC(SYSDATE)
143  ,	 1001
144  ,	 TRUNC(SYSDATE)
145  ) source
146  ON (target.transaction_id = source.transaction_id)
147  WHEN MATCHED THEN
148  UPDATE SET last_updated_by = source.last_updated_by
149  ,		last_update_date = source.last_update_date
150  WHEN NOT MATCHED THEN
151  INSERT VALUES
152  ( transaction_s1.nextval
153  , source.transaction_account
154  , source.transaction_type
155  , source.transaction_date
156  , source.transaction_amount
157  , source.rental_id
158  , source.payment_method_type
159  , source.payment_account_number
160  , source.created_by
161  , source.creation_date
162  , source.last_updated_by
163  , source.last_update_date);
164  
165    -- Save the changes.
166    COMMIT;
167  
168  EXCEPTION
169    WHEN OTHERS THEN
170  	 ROLLBACK TO starting_point;
171  	 RETURN;
172  END;
173  /

Procedure created.

SQL> 
SQL> EXECUTE upload_transaction;

PL/SQL procedure successfully completed.

SQL> 
SQL> COLUMN rental_count      FORMAT 99,999 HEADING "Rental|Count"
SQL> COLUMN rental_item_count FORMAT 99,999 HEADING "Rental|Item|Count"
SQL> COLUMN transaction_count FORMAT 99,999 HEADING "Transaction|Count"
SQL> 
SQL> SELECT   il1.rental_count
  2  ,	      il2.rental_item_count
  3  ,	      il3.transaction_count
  4  FROM    (SELECT COUNT(*) AS rental_count FROM rental) il1 CROSS JOIN
  5  	     (SELECT COUNT(*) AS rental_item_count FROM rental_item) il2 CROSS JOIN
  6  	     (SELECT COUNT(*) AS transaction_count FROM TRANSACTION) il3;

         Rental                                                                 
 Rental    Item Transaction                                                     
  Count   Count       Count                                                     
------- ------- -----------                                                     
  9,370  23,053       9,362                                                     

1 row selected.

SQL> 
SQL> EXECUTE upload_transaction;

PL/SQL procedure successfully completed.

SQL> 
SQL> COLUMN rental_count      FORMAT 99,999 HEADING "Rental|Count"
SQL> COLUMN rental_item_count FORMAT 99,999 HEADING "Rental|Item|Count"
SQL> COLUMN transaction_count FORMAT 99,999 HEADING "Transaction|Count"
SQL> 
SQL> SELECT   il1.rental_count
  2  ,	      il2.rental_item_count
  3  ,	      il3.transaction_count
  4  FROM    (SELECT COUNT(*) AS rental_count FROM rental) il1 CROSS JOIN
  5  	     (SELECT COUNT(*) AS rental_item_count FROM rental_item) il2 CROSS JOIN
  6  	     (SELECT COUNT(*) AS transaction_count FROM TRANSACTION) il3;

         Rental                                                                 
 Rental    Item Transaction                                                     
  Count   Count       Count                                                     
------- ------- -----------                                                     
 14,051  34,573      14,043                                                     

1 row selected.

SQL> 
SQL> -- step 5 --
SQL> 
SQL> SELECT
  2    il.month AS "Month Year"
  3  , il.base AS "BASE REVENUE"
  4  , il.plus10 AS "10 PLUS REVENUE"
  5  , il.plus20 AS "20 PLUS REVENUE"
  6  , il.only10 AS "10 PLUS DIFF"
  7  , il.only20 AS "20 PLUS DIFF"
  8  FROM
  9  	 (SELECT
 10  	     CONCAT(TO_CHAR(t.transaction_date,'MON'),CONCAT(' ',EXTRACT(YEAR FROM t.transaction_date))) AS MONTH
 11  	 ,   EXTRACT(MONTH FROM t.transaction_date) AS sortkey
 12  	 ,   TO_CHAR(SUM(t.transaction_amount),'$9,999,999.00') AS base
 13  	 ,   TO_CHAR(SUM(t.transaction_amount) * 1.1,'$9,999,999.00') AS plus10
 14  	 ,   TO_CHAR(SUM(t.transaction_amount) * 1.2,'$9,999,999.00') AS plus20
 15  	 ,   TO_CHAR(SUM(t.transaction_amount) * 0.1,'$9,999,999.00') AS only10
 16  	 ,   TO_CHAR(SUM(t.transaction_amount) * 0.2,'$9,999,999.00') AS only20
 17  	 FROM transaction t
 18  	 WHERE EXTRACT(YEAR FROM t.transaction_date) = 2009
 19  	 GROUP BY CONCAT(TO_CHAR(t.transaction_date,'MON'),CONCAT(' ',EXTRACT(YEAR FROM t.transaction_date))), EXTRACT(MONTH FROM t.transaction_date)) il
 20  ORDER BY il.sortkey;

Month Year                                            BASE REVENUE              
----------------------------------------------------- --------------            
10 PLUS REVENU 20 PLUS REVENU 10 PLUS DIFF   20 PLUS DIFF                       
-------------- -------------- -------------- --------------                     
JAN 2009                                                   $7,560.00            
     $8,316.00      $9,072.00        $756.00      $1,512.00                     
                                                                                
FEB 2009                                                  $12,087.00            
    $13,295.70     $14,504.40      $1,208.70      $2,417.40                     
                                                                                
MAR 2009                                                  $15,201.00            
    $16,721.10     $18,241.20      $1,520.10      $3,040.20                     
                                                                                
APR 2009                                                  $13,959.00            
    $15,354.90     $16,750.80      $1,395.90      $2,791.80                     

Month Year                                            BASE REVENUE              
----------------------------------------------------- --------------            
10 PLUS REVENU 20 PLUS REVENU 10 PLUS DIFF   20 PLUS DIFF                       
-------------- -------------- -------------- --------------                     
                                                                                
MAY 2009                                                   $6,273.00            
     $6,900.30      $7,527.60        $627.30      $1,254.60                     
                                                                                
JUN 2009                                                   $3,420.00            
     $3,762.00      $4,104.00        $342.00        $684.00                     
                                                                                
JUL 2009                                                   $6,804.00            
     $7,484.40      $8,164.80        $680.40      $1,360.80                     
                                                                                
AUG 2009                                                   $6,345.00            

Month Year                                            BASE REVENUE              
----------------------------------------------------- --------------            
10 PLUS REVENU 20 PLUS REVENU 10 PLUS DIFF   20 PLUS DIFF                       
-------------- -------------- -------------- --------------                     
     $6,979.50      $7,614.00        $634.50      $1,269.00                     
                                                                                
SEP 2009                                                   $6,219.00            
     $6,840.90      $7,462.80        $621.90      $1,243.80                     
                                                                                
OCT 2009                                                   $9,270.00            
    $10,197.00     $11,124.00        $927.00      $1,854.00                     
                                                                                
NOV 2009                                                   $8,847.00            
     $9,731.70     $10,616.40        $884.70      $1,769.40                     
                                                                                

Month Year                                            BASE REVENUE              
----------------------------------------------------- --------------            
10 PLUS REVENU 20 PLUS REVENU 10 PLUS DIFF   20 PLUS DIFF                       
-------------- -------------- -------------- --------------                     
DEC 2009                                                   $6,624.00            
     $7,286.40      $7,948.80        $662.40      $1,324.80                     
                                                                                

12 rows selected.

SQL> 
SQL> 
SQL> SPOOL OFF
